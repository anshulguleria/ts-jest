# This is a workflow to create github release for a tag and publish the package
# to npm repo

name: release-and-publish

# Controls when the action will run. Triggers the workflow on push of tag
# request events but only tags matching the configured regex
on:
  push:
    tags:
      # patterns to match for tag creation. Here all tags similar to v1.0 or
      # v1.2.0 will trigger this action
      - 'v[0-9]+.[0-9]+.[0-9]+*'

# A workflow run is made up of one or more jobs that can run sequentially or in
# parallel
jobs:
  # This workflow contains a single job called "build"
  create_release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the
    # job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access
    # it
    - name: Checkout code
      uses: actions/checkout@v2

    # Runs a single command using the runners shell
    - name: Create release for tag
      uses: actions/create-release@latest
      env:
        # this is provided by github, you don't need to do anything here
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          Release triggered by actor ${{ github.actor }}
        draft: false
        prerelease: false

  publish_to_npm:
    needs: [create_release]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 12
          registry-url: https://registry.npmjs.org/
      - name: Check lock file
        # runs npm install using package-lock.json and verifies
        # if dependencies are matching with package.json or not
        run: npm ci
        # This will tell npm to publish your scoped package with public access
      - name: Publish with latest tag
        if: contains(github.ref, '-alpha') != true && contains(github.ref, '-beta') != true && contains(github.ref, '-rc') != true
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
      - name: Publish with next tag
        if: contains(github.ref, '-alpha') || contains(github.ref, '-beta') || contains(github.ref, '-rc')
        run: npm publish --access public --tag next
        env:
          NODE_AUTH_TOKEN: ${{secrets.NPM_TOKEN}}
